// Generated by view binder compiler. Do not edit!
package org.wit.hikingtrail.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wit.hikingtrail.R;

public final class CardHikingtrailBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView difficulty;

  @NonNull
  public final ImageView favCard;

  @NonNull
  public final CheckBox favIcon;

  @NonNull
  public final TextView hikingtrailTitle;

  @NonNull
  public final ImageView imageIcon;

  @NonNull
  public final TextView rating;

  @NonNull
  public final ConstraintLayout relativeLayout;

  private CardHikingtrailBinding(@NonNull CardView rootView, @NonNull TextView date,
      @NonNull TextView description, @NonNull TextView difficulty, @NonNull ImageView favCard,
      @NonNull CheckBox favIcon, @NonNull TextView hikingtrailTitle, @NonNull ImageView imageIcon,
      @NonNull TextView rating, @NonNull ConstraintLayout relativeLayout) {
    this.rootView = rootView;
    this.date = date;
    this.description = description;
    this.difficulty = difficulty;
    this.favCard = favCard;
    this.favIcon = favIcon;
    this.hikingtrailTitle = hikingtrailTitle;
    this.imageIcon = imageIcon;
    this.rating = rating;
    this.relativeLayout = relativeLayout;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardHikingtrailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardHikingtrailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_hikingtrail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardHikingtrailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.difficulty;
      TextView difficulty = ViewBindings.findChildViewById(rootView, id);
      if (difficulty == null) {
        break missingId;
      }

      id = R.id.favCard;
      ImageView favCard = ViewBindings.findChildViewById(rootView, id);
      if (favCard == null) {
        break missingId;
      }

      id = R.id.favIcon;
      CheckBox favIcon = ViewBindings.findChildViewById(rootView, id);
      if (favIcon == null) {
        break missingId;
      }

      id = R.id.hikingtrailTitle;
      TextView hikingtrailTitle = ViewBindings.findChildViewById(rootView, id);
      if (hikingtrailTitle == null) {
        break missingId;
      }

      id = R.id.imageIcon;
      ImageView imageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageIcon == null) {
        break missingId;
      }

      id = R.id.rating;
      TextView rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      ConstraintLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      return new CardHikingtrailBinding((CardView) rootView, date, description, difficulty, favCard,
          favIcon, hikingtrailTitle, imageIcon, rating, relativeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
