// Generated by view binder compiler. Do not edit!
package org.wit.hikingtrail.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wit.hikingtrail.R;

public final class ActivityHikingtrailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button chooseImage;

  @NonNull
  public final DatePicker datePicker;

  @NonNull
  public final TextView dateView;

  @NonNull
  public final EditText description;

  @NonNull
  public final EditText difficulty;

  @NonNull
  public final ImageView hikingtrailImage;

  @NonNull
  public final EditText hikingtrailTitle;

  @NonNull
  public final TextView lat;

  @NonNull
  public final TextView lng;

  @NonNull
  public final MapView mapView2;

  @NonNull
  public final RatingBar rBar;

  @NonNull
  public final TextView rating;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextView textView;

  @NonNull
  public final Toolbar toolbarAdd;

  private ActivityHikingtrailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button chooseImage,
      @NonNull DatePicker datePicker, @NonNull TextView dateView, @NonNull EditText description,
      @NonNull EditText difficulty, @NonNull ImageView hikingtrailImage,
      @NonNull EditText hikingtrailTitle, @NonNull TextView lat, @NonNull TextView lng,
      @NonNull MapView mapView2, @NonNull RatingBar rBar, @NonNull TextView rating,
      @NonNull Spinner spinner, @NonNull TextView textView, @NonNull Toolbar toolbarAdd) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.chooseImage = chooseImage;
    this.datePicker = datePicker;
    this.dateView = dateView;
    this.description = description;
    this.difficulty = difficulty;
    this.hikingtrailImage = hikingtrailImage;
    this.hikingtrailTitle = hikingtrailTitle;
    this.lat = lat;
    this.lng = lng;
    this.mapView2 = mapView2;
    this.rBar = rBar;
    this.rating = rating;
    this.spinner = spinner;
    this.textView = textView;
    this.toolbarAdd = toolbarAdd;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHikingtrailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHikingtrailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hikingtrail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHikingtrailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.chooseImage;
      Button chooseImage = ViewBindings.findChildViewById(rootView, id);
      if (chooseImage == null) {
        break missingId;
      }

      id = R.id.datePicker;
      DatePicker datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.dateView;
      TextView dateView = ViewBindings.findChildViewById(rootView, id);
      if (dateView == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.difficulty;
      EditText difficulty = ViewBindings.findChildViewById(rootView, id);
      if (difficulty == null) {
        break missingId;
      }

      id = R.id.hikingtrailImage;
      ImageView hikingtrailImage = ViewBindings.findChildViewById(rootView, id);
      if (hikingtrailImage == null) {
        break missingId;
      }

      id = R.id.hikingtrailTitle;
      EditText hikingtrailTitle = ViewBindings.findChildViewById(rootView, id);
      if (hikingtrailTitle == null) {
        break missingId;
      }

      id = R.id.lat;
      TextView lat = ViewBindings.findChildViewById(rootView, id);
      if (lat == null) {
        break missingId;
      }

      id = R.id.lng;
      TextView lng = ViewBindings.findChildViewById(rootView, id);
      if (lng == null) {
        break missingId;
      }

      id = R.id.mapView2;
      MapView mapView2 = ViewBindings.findChildViewById(rootView, id);
      if (mapView2 == null) {
        break missingId;
      }

      id = R.id.rBar;
      RatingBar rBar = ViewBindings.findChildViewById(rootView, id);
      if (rBar == null) {
        break missingId;
      }

      id = R.id.rating;
      TextView rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbarAdd;
      Toolbar toolbarAdd = ViewBindings.findChildViewById(rootView, id);
      if (toolbarAdd == null) {
        break missingId;
      }

      return new ActivityHikingtrailBinding((ConstraintLayout) rootView, appBarLayout, chooseImage,
          datePicker, dateView, description, difficulty, hikingtrailImage, hikingtrailTitle, lat,
          lng, mapView2, rBar, rating, spinner, textView, toolbarAdd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
